name: Terraform AWS Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:  # ðŸ‘ˆ Allows manual trigger for destroy

jobs:
  terraform:
    name: Terraform in day1 directory
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # update to your AWS region

      - name: Terraform Init
        working-directory: ./day1
        run: terraform init

      - name: Terraform Validate
        working-directory: ./day1
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./day1
        run: terraform plan -var-file="terraform.tfvars"

      # - name: Terraform Apply
      #   if: github.ref == 'refs/heads/main'
      #   working-directory: ./day1
      #   run: terraform apply -auto-approve -var-file="terraform.tfvars"
  destroy:
    name: Destroy Terraform
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        working-directory: ./day1
        run: terraform init

      - name: Terraform Destroy
        working-directory: ./day1
        run: terraform destroy -auto-approve -var-file="terraform.tfvars"
